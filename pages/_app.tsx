import "../styles/globals.scss";
import type { AppProps } from "next/app";
import Head from "next/head";
import { FirebaseContextProvider } from "../context/firebase";
import { useMemo } from "react";
import { QueryClient, QueryClientProvider } from "react-query";
import {
  Container,
  createTheme,
  CssBaseline,
  ThemeProvider,
  useMediaQuery,
} from "@mui/material";
import { getDesignTokens } from "../theme";

function App({ Component, pageProps, router, ...props }: AppProps & any) {
  const prefersDarkMode = useMediaQuery("(prefers-color-scheme: dark)", {
    defaultMatches: true,
  });
  const theme = useMemo(
    () => createTheme(getDesignTokens(prefersDarkMode ? "dark" : "light")),
    [prefersDarkMode]
  );
  // const analytics = useAnalytics();
  // useEffect(() => {
  //   if (!analytics) return;
  //   const log = (url: any, o?: any) => {
  //     console.log("routeChangeComplete", url, o);
  //     logEvent(analytics, "page_view", {
  //       page_path: url,
  //       page_title: document.title,
  //       page_location: window.location.toString(),
  //     });
  //   };
  //   log(router.route);
  //   router.events.on("routeChangeComplete", log);
  //   return () => router.events.off("routeChangeComplete", log);
  // }, [router.events, router.route, analytics]);
  return (
    <>
      <Head>
        <title>Chestr</title>
        <meta name="description" content="Generated by create next app" />
        <link rel="icon" href="/favicon.ico" />
      </Head>
      <ThemeProvider theme={theme}>
        <CssBaseline />
        <Container component="main" maxWidth="xs">
          <Component {...pageProps} />
        </Container>
      </ThemeProvider>
    </>
  );
}

const queryClient = new QueryClient();
function FirebaseApp(appProps: AppProps) {
  return (
    <QueryClientProvider client={queryClient}>
      <FirebaseContextProvider>
        <App {...appProps} />
      </FirebaseContextProvider>
    </QueryClientProvider>
  );
}

export default FirebaseApp;
